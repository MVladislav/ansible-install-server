---
# tasks file for ./roles/install_server

# ------------------------------------------------------------------------------
- name: "SERVER | python | check python version for arg '--break-system-packages'"
  become: true
  ansible.builtin.set_fact:
    install_server_fact_py_extra_args: "--break-system-packages"
  when:
    - install_server_python is defined
    - install_server_python.pip is defined
    - ansible_facts['python_version'] >= "3.11"
  tags:
    - install_server
    - install_python

# ------------------------------------------------------------------------------
- name: "SERVER | python | install python packages by pip - for user {{ outer_item.name }}"
  become: true
  become_user: "{{ outer_item.name }}"
  ansible.builtin.pip:
    name: "{{ item.name }}"
    extra_args: "{{ install_server_fact_py_extra_args | default('') }}"
  loop: "{{ install_server_python.pip | flatten(levels=1) }}"
  when:
    - install_server_python is defined
    - install_server_python.pip is defined
    - item.install is defined
    - item.install | bool
  tags:
    - molecule-idempotence-notest
    - install_server
    - install_python

# ------------------------------------------------------------------------------
- name: "SERVER | python | get list of outdated pip packages - for user {{ outer_item.name }}"
  become: true
  become_user: "{{ outer_item.name }}"
  ansible.builtin.shell: >
    set -o pipefail &&
    python3 -m pip list -o | cut -f1 -d" " | tr " " "\n" | awk "{if(NR>=3)print}" | cut -d" " -f1
  args:
    executable: /bin/bash
  register: pip_outdated
  changed_when: pip_outdated.rc in [1]
  failed_when: pip_outdated.rc not in [0, 1]
  when:
    - install_server_config.python_pip_update is defined
    - install_server_config.python_pip_update
    - install_server_python is defined
    - install_server_python.pip is defined
  tags:
    - install_server
    - install_python

- name: "SERVER | python | update all installed pip packages - for user {{ outer_item.name }}"
  become: true
  become_user: "{{ outer_item.name }}"
  ansible.builtin.pip:
    name: "{{ item }}"
    extra_args: "--upgrade --upgrade-strategy only-if-needed {{ install_server_fact_py_extra_args | default('') }}"
  with_items: "{{ pip_outdated.stdout_lines }}"
  register: python_pip_upgrade
  # NOTE: ignore error, when there is nothing to upgrade
  # NOTE: or any package can not be upgraded
  # failed_when: python_pip_upgrade not in [0,1]
  ignore_errors: true
  when:
    - install_server_config.python_pip_update is defined
    - install_server_config.python_pip_update
    - install_server_python is defined
    - install_server_python.pip is defined
  tags:
    - molecule-idempotence-notest
    - install_server
    - install_python
