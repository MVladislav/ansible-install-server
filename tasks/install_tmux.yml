---
# tasks file for ./roles/install_server

# ------------------------------------------------------------------------------
- name: "SERVER | tmux | step 1 | install dependencies [apt]"
  become: true
  ansible.builtin.apt:
    pkg: "{{ install_server_tmux.apt_dependencies }}"
    state: present
    force_apt_get: true # apt-get instead of aptitude
  tags:
    - install_server
    - tmux

# ------------------------------------------------------------------------------
- name: "SERVER | tmux | step 2.1 | install tmux | git clone"
  become: true
  ansible.builtin.git:
    repo: "{{ install_server_tmux.git }}"
    dest: /opt/tmux
    force: true
    update: "{{ install_server_tmux.update | bool }}"
    version: "{{ install_server_tmux.git_version }}"
  tags:
    - install_server
    - tmux

- name: "SERVER | tmux | step 2.2 | install tmux | git clone | change owner"
  become: true
  ansible.builtin.file:
    path: /opt/tmux
    state: directory
    owner: "{{ outer_item.name }}"
    group: "{{ outer_item.name }}"
    recurse: true
  tags:
    - install_server
    - tmux

# ------------------------------------------------------------------------------
- name: "SERVER | tmux | step 3.1 | install tmux | run autogen.sh"
  become: true
  become_user: "{{ outer_item.name }}"
  ansible.builtin.shell: ./autogen.sh
  args:
    chdir: "/opt/tmux"
    creates: "/opt/tmux/configure"
    executable: /bin/bash
  tags:
    - install_server
    - tmux

- name: "SERVER | tmux | step 3.2 | install tmux | run configure"
  become: true
  become_user: "{{ outer_item.name }}"
  ansible.builtin.shell: ./configure --prefix=$HOME/.local/
  args:
    chdir: "/opt/tmux"
    creates: "/opt/tmux/Makefile"
    executable: /bin/bash
  tags:
    - install_server
    - tmux

- name: "SERVER | tmux | step 3.3 | install tmux | make and install"
  become: true
  become_user: "{{ outer_item.name }}"
  ansible.builtin.shell: set -o pipefail && make && make install
  args:
    chdir: "/opt/tmux"
    executable: /bin/bash
  register: tmux_make_run
  changed_when: tmux_make_run.rc == 0
  tags:
    - molecule-idempotence-notest
    - install_server
    - tmux

# ------------------------------------------------------------------------------
- name: "SERVER | tmux | step 4 | setup tmux plugins | git clone"
  become: true
  become_user: "{{ outer_item.name }}"
  ansible.builtin.git:
    repo: "{{ item.git }}"
    dest: "{{ item.path }}"
    force: true
    update: "{{ install_server_tmux.update | bool }}"
    version: "{{ item.version }}"
  loop: "{{ install_server_tmux.plugins | flatten(levels=1) }}"
  tags:
    - install_server
    - tmux

# ------------------------------------------------------------------------------
- name: "SERVER | tmux | step 5.1 | setup tmux | add base conf file"
  become: true
  become_user: "{{ outer_item.name }}"
  ansible.builtin.template:
    src: tmux/.tmux.conf.j2
    dest: "{{ install_server_tmux_file }}"
    mode: "0660"
  tags:
    - install_server
    - tmux

- name: "SERVER | tmux | step 5.2 | setup tmux | add additional conf file"
  become: true
  become_user: "{{ outer_item.name }}"
  ansible.builtin.template:
    src: "tmux/{{ item }}.j2"
    dest: "{{ install_server_tmux_path }}/{{ item }}"
    mode: "0660"
  loop: "{{ install_server_tmux.add_conf_files | flatten(levels=1) }}"
  tags:
    - install_server
    - tmux

- name: "SERVER | tmux | step 5.3 | setup tmux | add additional script helper"
  become: true
  become_user: "{{ outer_item.name }}"
  ansible.builtin.template:
    src: "tmux/scripts/{{ item }}.j2"
    dest: "{{ install_server_tmux_path_script }}/{{ item }}"
    mode: "0760"
  loop: "{{ install_server_tmux.add_script_files | flatten(levels=1) }}"
  tags:
    - install_server
    - tmux

# ------------------------------------------------------------------------------
- name: "SERVER | tmux | step 6 | setup tmux | install plugins"
  become: true
  become_user: "{{ outer_item.name }}"
  ansible.builtin.shell: >
    set -o pipefail && PATH="$HOME/.local/bin:$PATH"
    {{ install_server_tmux_path_plugins }}/tpm/scripts/install_plugins.sh
  args:
    executable: /bin/bash
  register: tmux_install_plugins
  changed_when: tmux_install_plugins.rc == 0
  tags:
    - molecule-idempotence-notest
    - install_server
    - tmux
