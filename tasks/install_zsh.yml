---
# tasks file for ./roles/install_server

# ------------------------------------------------------------------------------
- name: "SERVER | zsh | install zsh step 1 [apt]"
  become: true
  ansible.builtin.apt:
    pkg: "{{ install_server_zsh.apt }}"
    state: present
    force_apt_get: true # apt-get instead of aptitude
  tags:
    - install_server
    - zsh

# ------------------------------------------------------------------------------
- name: "SERVER | zsh | install zsh step 2 [git]"
  become: true
  become_user: "{{ outer_item.name }}"
  ansible.builtin.git:
    repo: "{{ install_server_zsh.git.ohmyzsh.url }}"
    dest: "{{ install_server_zsh.git.ohmyzsh.folder }}"
    force: true
    update: false
    version: "{{ install_server_zsh.git.ohmyzsh.version | default('master') }}"
  tags:
    - install_server
    - zsh

- name: "SERVER | zsh | install zsh step 2.1 [cp]"
  become: true
  become_user: "{{ outer_item.name }}"
  ansible.builtin.command: >
    cp
    {{ install_server_zsh.git.ohmyzsh.folder }}/templates/zshrc.zsh-template
    {{ install_server_zsh.zshrc_folder }}
  register: zsh_cp_ohmyzsh
  changed_when: zsh_cp_ohmyzsh.rc == 0
  tags:
    - molecule-idempotence-notest
    - install_server
    - zsh

# ------------------------------------------------------------------------------

- name: "SERVER | zsh | config zsh step 2.2.1 [get zsh path]"
  ansible.builtin.command: which zsh
  register: zsh_path
  changed_when: false
  failed_when: false
  tags:
    - install_server
    - zsh

- name: "SERVER | zsh | config zsh step 2.2.2 [set preferred shell]"
  ansible.builtin.set_fact:
    install_server_preferred_shell:
      shell: "{{ zsh_path.stdout }}"
      aliases_path: ~/.zshrc
      profile_d: /etc/zsh/profile.d
  when: zsh_path.stdout is defined
  tags:
    - install_server
    - zsh

# ------------------------------------------------------------------------------
- name: "SERVER | zsh | install zsh themes step 3.1 [git]"
  become: true
  become_user: "{{ outer_item.name }}"
  ansible.builtin.git:
    repo: "{{ item.url }}"
    dest: "{{ install_server_zsh.zsh_themes_folder }}/{{ item.name }}"
    force: true
    update: false
    version: "{{ item.version | default('master') }}"
  loop: "{{ install_server_zsh.git.themes | flatten(levels=1) }}"
  tags:
    - install_server
    - zsh

- name: "SERVER | zsh | install zsh themes step 3.2 [ln]"
  become: true
  become_user: "{{ outer_item.name }}"
  ansible.builtin.file:
    src: "{{ install_server_zsh.zsh_themes_folder }}/{{ item.name }}/{{ item.theme_name }}"
    dest: "{{ install_server_zsh.zsh_themes_folder }}/{{ item.theme_name }}"
    state: link
    force: true
  loop: "{{ install_server_zsh.git.themes | flatten(levels=1) }}"
  tags:
    - install_server
    - zsh

# ------------------------------------------------------------------------------
- name: "SERVER | zsh | install zsh step 4 [git plugins]"
  become: true
  become_user: "{{ outer_item.name }}"
  ansible.builtin.git:
    repo: "{{ item.url }}"
    dest: "{{ item.folder }}"
    depth: 1
    update: false
    version: master
  loop: "{{ install_server_zsh.git.zshEnableSourcePlugs | flatten(levels=1) }}"
  tags:
    - install_server
    - zsh

# template
- name: "SERVER | zsh | install zsh step 4.1 - copy 'zshrc'"
  become: true
  become_user: "{{ outer_item.name }}"
  ansible.builtin.template:
    src: "zshrc.j2"
    dest: "~/.zshrc"
    mode: "0660"
  tags:
    - install_server
    - zsh

# template
- name: "SERVER | zsh | install zsh step 4.2 - copy 'template for zsh script tools' with {{ item.path }}"
  become: true
  become_user: "{{ outer_item.name }}"
  ansible.builtin.template:
    src: "{{ item.template }}"
    dest: "{{ item.path }}"
    mode: "0660"
  loop: "{{ install_server_zsh.append_file | flatten(levels=1) }}"
  when: item.template is defined and item.path is defined
  tags:
    - install_server
    - zsh

# ------------------------------------------------------------------------------
- name: "SERVER | zsh | switch to zsh step 5 - for user: {{ outer_item.name }}"
  become: true
  ansible.builtin.user:
    name: "{{ outer_item.name }}"
    shell: "{{ install_server_preferred_shell.shell }}"
  tags:
    - install_server
    - zsh

# ------------------------------------------------------------------------------
- name: "SERVER | zsh | create a directory step 6 - for {{ install_server_preferred_shell.profile_d }}"
  become: true
  ansible.builtin.file:
    path: "{{ install_server_preferred_shell.profile_d }}"
    owner: "root"
    group: "root"
    state: directory
    mode: "0755"
  tags:
    - install_server
    - zsh
