---
# tasks file for ./roles/install_server

# ------------------------------------------------------------------------------
# SETUP USERS
- name: "SERVER | user | setup users"
  ansible.builtin.include_tasks: setup_users.yml

# ------------------------------------------------------------------------------
# DEFAULT PACKAGES
- name: "SERVER | apt | install default packages"
  ansible.builtin.include_tasks: install_apt.yml

# --- DEFAULT FOLDER ---
- name: "SERVER | folder | create default folder per client"
  become: true
  become_user: "{{ item.name }}"
  ansible.builtin.file:
    path: "~/.local/bin"
    state: directory
    mode: "0774"
  loop: "{{ clients | flatten(levels=1) }}"
  when:
    - clients is defined
  tags:
    - install_server
    - create_default_folder

# ------------------------------------------------------------------------------
# --- TUNNING OS ---
- name: "SERVER | os | run os tunning's"
  ansible.builtin.include_tasks: tun_os.yml
  when:
    - install_server_os_tun is defined
    - install_server_os_tun.install is defined
    - install_server_os_tun.install | bool

# # ------------------------------------------------------------------------------
# # ENV
# - name: set env variables
#   become: true
#   lineinfile:
#     dest: "/etc/environment"
#     state: present
#     regexp: "^{{ item.key }}="
#     line: "{{ item.key }}={{ item.value}}"
#   with_items:
#     - key: LC_CTYPE
#       value: C.UTF-8
#   tags:
#     - install_server
#     - env_variables

# ------------------------------------------------------------------------------
# INSTALL GIT
# - will be installed per client, need to set clients
- name: "SERVER | git | install git (per user)"
  ansible.builtin.include_tasks: install_git.yml
  loop: "{{ clients | flatten(levels=1) }}"
  loop_control:
    loop_var: outer_item
  when:
    - install_server_config.git is defined
    - install_server_config.git | bool
    - clients is defined
    - outer_item.dev is defined
    - outer_item.dev | bool

# ------------------------------------------------------------------------------
# INSTALL ZSH
# - will be installed per client, need to set clients
- name: "SERVER | zsh | install zsh (per user)"
  ansible.builtin.include_tasks: install_zsh.yml
  loop: "{{ clients | flatten(levels=1) }}"
  loop_control:
    loop_var: outer_item
  when:
    - install_server_config.zsh is defined
    - install_server_config.zsh | bool
    - clients is defined
    - outer_item.dev is defined
    - outer_item.dev | bool

# ------------------------------------------------------------------------------
# INSTALL TMUX
# - will be installed per client, need to set clients
- name: "SERVER | tmux | install tmux (per user)"
  ansible.builtin.include_tasks: install_tmux.yml
  loop: "{{ clients | flatten(levels=1) }}"
  loop_control:
    loop_var: outer_item
  when:
    - install_server_config.tmux is defined
    - install_server_config.tmux | bool
    - clients is defined
    - outer_item.dev is defined
    - outer_item.dev | bool

# ------------------------------------------------------------------------------
# DPKG PACKAGES
- name: "SERVER | dpkg | install dpkg packages"
  ansible.builtin.include_tasks: install_dpkg.yml

# ------------------------------------------------------------------------------
# SNAP PACKAGES
- name: "SERVER | snap | install snap packages"
  ansible.builtin.include_tasks: install_snap.yml

# ------------------------------------------------------------------------------
# PYTHON PACKAGES
- name: "SERVER | python | install python"
  ansible.builtin.include_tasks: install_python.yml
  when:
    - install_server_config.python is defined
    - install_server_config.python | bool

# - will be installed per client, need to set clients
- name: "SERVER | python | install python packages (per user)"
  ansible.builtin.include_tasks: install_python_pkg.yml
  loop: "{{ clients | flatten(levels=1) }}"
  loop_control:
    loop_var: outer_item
  when:
    - install_server_config.python is defined
    - install_server_config.python | bool
    - clients is defined
    - outer_item.dev is defined
    - outer_item.dev | bool

# ------------------------------------------------------------------------------
# RUBY PACKAGES
- name: "SERVER | ruby | install ruby packages"
  ansible.builtin.include_tasks: install_ruby.yml
  when: install_server_config.ruby is defined and install_server_config.ruby | bool

# ------------------------------------------------------------------------------
# NPM PACKAGES
- name: "SERVER | npm | install npm"
  ansible.builtin.include_tasks: install_npm.yml
  when: install_server_config.npm is defined and install_server_config.npm | bool

# - will be installed per client, need to set clients
- name: "SERVER | npm | install npm packages (per user)"
  ansible.builtin.include_tasks: install_npm_pkg.yml
  loop: "{{ clients | flatten(levels=1) }}"
  loop_control:
    loop_var: outer_item
  when:
    - install_server_config.npm is defined
    - install_server_config.npm | bool
    - clients is defined
    - outer_item.dev is defined
    - outer_item.dev | bool

# ------------------------------------------------------------------------------
# MONGODB PACKAGES
- name: "SERVER | mongodb | install mongodb"
  ansible.builtin.include_tasks: install_mongodb.yml
  when:
    - install_server_config.mongodb is defined
    - install_server_config.mongodb | bool

# ------------------------------------------------------------------------------
# JAVA PACKAGES
- name: "SERVER | java | install java packages"
  ansible.builtin.include_tasks: install_java.yml
  when:
    - install_server_config.java is defined
    - install_server_config.java | bool
