---
# tasks file for ./roles/install_server

# ------------------------------------------------------------------------------
# SETUP USERS
- name: setup users
  include: setup_users.yml

# ------------------------------------------------------------------------------
# DEFAULT PACKAGES
- name: install default packages
  include: install_apt.yml

# ------------------------------------------------------------------------------
# CHANGE HOST DEFAULTS

# --- HOSTNAME ---
- name: set hostname
  become: yes
  shell: "hostnamectl set-hostname {{ install_server_hostname }}"
  when: install_server_hostname is defined
  tags:
    - install_server
    - hostname
# - name: set hostname
#   become: yes
#   ansible.builtin.hostname:
#     name: "{{ install_server_hostname }}"
#   when: install_server_hostname is defined
#   tags:
#     - install_server
#     - hostname

# --- AUTOUPDATE ---
- name: set auto update over unattended-upgrades
  become: yes
  shell: "dpkg-reconfigure -f noninteractive --priority low unattended-upgrades"
  tags:
    - install_server
    - auto_update

# --- DEFAULT FOLDER ---
- name: "create default folder per client"
  become: yes
  become_user: "{{ item.name }}"
  ansible.builtin.file:
    path: "~/.local/bin"
    state: directory
    mode: "0774"
  loop: "{{ clients | flatten(levels=1) }}"
  when: clients is defined
  tags:
    - install_server
    - create_default_folder

# ------------------------------------------------------------------------------
# --- TUNNING OS ---
- name: run os tunning's
  include: tun_os.yml
  when: (install_server_os_tun is defined) and (install_server_os_tun.install is defined and install_server_os_tun.install | bool)

# ------------------------------------------------------------------------------
# ENV
- name: set env variables
  become: yes
  lineinfile:
    dest: "/etc/environment"
    state: present
    regexp: "^{{ item.key }}="
    line: "{{ item.key }}={{ item.value}}"
  with_items:
    - key: LC_CTYPE
      value: C.UTF-8
  tags:
    - install_server
    - env_variables

# ------------------------------------------------------------------------------
# INSTALL GIT
# - will be installed per client, need to set clients
- name: install git (per user)
  include: install_git.yml
  loop: "{{ clients | flatten(levels=1) }}"
  loop_control:
    loop_var: outer_item
  when: (install_server_config.git is defined and install_server_config.git | bool) and (clients is defined and outer_item.dev is defined and outer_item.dev | bool)

# ------------------------------------------------------------------------------
# INSTALL ZSH
# - will be installed per client, need to set clients
- name: install zsh (per user)
  include: install_zsh.yml
  loop: "{{ clients | flatten(levels=1) }}"
  loop_control:
    loop_var: outer_item
  when: (install_server_config.zsh is defined and install_server_config.zsh | bool) and (clients is defined and outer_item.dev is defined and outer_item.dev | bool)

# ------------------------------------------------------------------------------
# INSTALL TMUX
# - will be installed per client, need to set clients
- name: install tmux (per user)
  include: install_tmux.yml
  loop: "{{ clients | flatten(levels=1) }}"
  loop_control:
    loop_var: outer_item
  when: (install_server_config.tmux is defined and install_server_config.tmux | bool) and (clients is defined and outer_item.dev is defined and outer_item.dev | bool)

# ------------------------------------------------------------------------------
# DPKG PACKAGES
- name: install dpkg packages
  include: install_dpkg.yml

# ------------------------------------------------------------------------------
# SNAP PACKAGES
- name: install snap packages
  include: install_snap.yml

# ------------------------------------------------------------------------------
# PYTHON PACKAGES
- name: install python
  include: install_python.yml
  when: install_server_config.python is defined and install_server_config.python | bool

# - will be installed per client, need to set clients
- name: install python packages (per user)
  include: install_python_pkg.yml
  loop: "{{ clients | flatten(levels=1) }}"
  loop_control:
    loop_var: outer_item
  when: (install_server_config.python is defined and install_server_config.python | bool) and (clients is defined and outer_item.dev is defined and outer_item.dev | bool)

# ------------------------------------------------------------------------------
# GO PACKAGES
- name: install go packages
  include: install_go.yml
  when: install_server_config.go is defined and install_server_config.go | bool

# ------------------------------------------------------------------------------
# RUBY PACKAGES
- name: install ruby packages
  include: install_ruby.yml
  when: install_server_config.ruby is defined and install_server_config.ruby | bool

# ------------------------------------------------------------------------------
# NPM PACKAGES
- name: install npm
  include: install_npm.yml
  when: install_server_config.npm is defined and install_server_config.npm | bool

# - will be installed per client, need to set clients
- name: install npm packages (per user)
  include: install_npm_pkg.yml
  loop: "{{ clients | flatten(levels=1) }}"
  loop_control:
    loop_var: outer_item
  when: (install_server_config.npm is defined and install_server_config.npm | bool) and (clients is defined and outer_item.dev is defined and outer_item.dev | bool)

# ------------------------------------------------------------------------------
# MONGODB PACKAGES
- name: install mongodb
  include: install_mongodb.yml
  when: install_server_config.mongodb is defined and install_server_config.mongodb | bool

# ------------------------------------------------------------------------------
# JAVA PACKAGES
- name: install java packages
  include: install_java.yml
  when: install_server_config.java is defined and install_server_config.java | bool
