---
# defaults file for ./roles/install_server

# ------------------------------------------------------------------------------
# CLIENTS for adding access (ex. zsh)
clients:
  - name: "{{ ansible_user }}"
    # dev: true
    # shell: /bin/bash
    # group: 'adm, cdrom, sudo'
    # createhome: true
    # password:
    # updateOrCreate: false

# ------------------------------------------------------------------------------
install_server_service_name: default-server

# will be changed auto in 'pre.yml' and on install 'zsh'
install_server_preferred_shell:
  shell: /bin/sh
  aliases_path: ~/.shrc
  profile_d: /etc/profile.d

# some version manually needs to checked and updated
install_server_links_to_check_update:
  lua_version: 5.4
  # https://snapcraft.io/node
  snap_node_version: 22
  java_version: 21

# ------------------------------------------------------------------------------
# WHAT TO INSTALL
install_server_config:
  # APT (1) -------------------------------
  apt_base: false
  apt_exa: false
  apt_eza: false
  apt_bat: false
  apt_ncdu: false
  apt_auth_priv: false
  apt_cert: false
  apt_archive: false
  apt_dev: false
  apt_build: false
  apt_libs: false
  # APT (2) -------------------------------
  apt_php: false
  apt_lua: false
  apt_java_jre_headless: false
  apt_java_jdk: false
  apt_java_ant: false
  apt_java_maven: false
  apt_java_gradle: false
  # APT (3) -------------------------------
  apt_snap: false
  apt_qemu_guest_agent: false
  apt_rasp_pi_pkg: false
  apt_vpn_resolvconf: false
  apt_vpn_wireguard: false
  apt_vpn_openvpn: false
  apt_vpn_openconnect: false
  apt_latex: false
  apt_pandoc: false
  apt_john_the_ripper: false
  apt_nmap: false
  # DPKG ----------------------------------
  # dpkg_...: false
  # SNAP ----------------------------------
  snap_juju: false
  snap_maas: false
  snap_microk8s: false
  snap_kubectl: false
  snap_helm: false
  snap_multipass: false
  snap_btop: false
  snap_glow: false
  snap_go: false
  snap_httpie: false
  snap_node: false
  snap_openjdk: false
  snap_openjfx: false
  snap_ruby: false
  # need to run "rustup default stable"
  snap_rust: false
  snap_shellcheck: false
  snap_john_the_ripper: false
  snap_nmap: false
  # # FLATHUB ----------------------------------
  # flatpak_john_the_ripper: false
  # flatpak_nmap: false
  # OTHER --------------------------------
  inst_git_conf: false # NOTE: depends on clients[...].dev
  inst_fonts: false
  inst_zsh_conf: false # NOTE: depends on clients[...].dev
  inst_tmux_conf: false # NOTE: depends on clients[...].dev
  inst_nvim_conf: false # NOTE: depends on clients[...].dev
  # PYTHON --------------------------------
  apt_python: false
  apt_python_pip: false
  apt_python_venv: false
  apt_python_dev: false
  pip_s_tui: false
  pip_virtualenv: false
  pip_ruff: false
  pip_autopep8: false
  pip_black: false
  pip_mypy: false
  pip_pre_commit: false
  pip_openconnect_sso: false
  pip_ansible: false
  # NPM --------------------------------
  npm_typescript: false
  # GO --------------------------------
  go_kompose: false
  go_act: false

# ------------------------------------------------------------------------------
# APT
# install_server_config.apt_...
install_server_apt:
  # --------------------------------
  - name: curl
    install: "{{ install_server_config.apt_base | default('no') | bool }}"
  - name: rsync
    install: "{{ install_server_config.apt_base | default('no') | bool }}"
  - name: git
    install: "{{ install_server_config.apt_base | default('no') | bool }}"
  - name: vim
    install: "{{ install_server_config.apt_base | default('no') | bool }}"
  - name: nano
    install: "{{ install_server_config.apt_base | default('no') | bool }}"
  - name: duf
    install: "{{ install_server_config.apt_base | default('no') | bool }}"
  # --------------------------------
  - name: exa
    install: "{{ install_server_config.apt_exa | default('no') | bool }}"
  - name: eza
    install: "{{ install_server_config.apt_eza | default('no') | bool }}"
  - name: bat
    install: "{{ install_server_config.apt_bat | default('no') | bool }}"
  - name: ncdu
    install: "{{ install_server_config.apt_ncdu | default('no') | bool }}"
  # --------------------------------
  - name: dirmngr
    install: "{{ install_server_config.apt_auth_priv | default('no') | bool }}"
  - name: gnupg
    install: "{{ install_server_config.apt_auth_priv | default('no') | bool }}"
  - name: libpam-u2f
    install: "{{ install_server_config.apt_auth_priv | default('no') | bool }}"
  - name: libfido2-dev
    install: "{{ install_server_config.apt_auth_priv | default('no') | bool }}"
  # --------------------------------
  - name: openssl
    install: "{{ install_server_config.apt_cert | default('no') | bool }}"
  - name: ca-certificates
    install: "{{ install_server_config.apt_cert | default('no') | bool }}"
  - name: apt-transport-https
    install: "{{ install_server_config.apt_cert | default('no') | bool }}"
  # --------------------------------
  - name: rar
    install: "{{ install_server_config.apt_archive | default('no') | bool }}"
  - name: unrar
    install: "{{ install_server_config.apt_archive | default('no') | bool }}"
  - name: zip
    install: "{{ install_server_config.apt_archive | default('no') | bool }}"
  - name: p7zip-full
    install: "{{ install_server_config.apt_archive | default('no') | bool }}"
  - name: xz-utils
    install: "{{ install_server_config.apt_archive | default('no') | bool }}"
  - name: pigz
    install: "{{ install_server_config.apt_archive | default('no') | bool }}"
  # ----------------------------------------------------------------------------
  # monitoring: lsof|tcpdump -i ...|netstat -a | more|htop|iotop|iostat|s-tui|watch zpool iostat -vy 1 1|smem -tuwa|bpytop
  - name: jq
    install: "{{ install_server_config.apt_dev | default('no') | bool }}"
  - name: iftop
    install: "{{ install_server_config.apt_dev | default('no') | bool }}"
  - name: htop
    install: "{{ install_server_config.apt_dev | default('no') | bool }}"
  - name: iotop
    install: "{{ install_server_config.apt_dev | default('no') | bool }}"
  - name: nvtop
    install: "{{ install_server_config.apt_dev | default('no') | bool }}"
  - name: powertop
    install: "{{ install_server_config.apt_dev | default('no') | bool }}"
  - name: sysstat
    install: "{{ install_server_config.apt_dev | default('no') | bool }}"
  - name: sysbench
    install: "{{ install_server_config.apt_dev | default('no') | bool }}"
  - name: smem
    install: "{{ install_server_config.apt_dev | default('no') | bool }}"
  - name: iozone3
    install: "{{ install_server_config.apt_dev | default('no') | bool }}"
  - name: haveged
    install: "{{ install_server_config.apt_dev | default('no') | bool }}"
  - name: ethtool
    install: "{{ install_server_config.apt_dev | default('no') | bool }}"
  # - name: net-tools
  #   install: "{{ install_server_config.apt_dev | default('no') | bool }}"
  - name: iperf3
    install: "{{ install_server_config.apt_dev | default('no') | bool }}"
  - name: stress
    install: "{{ install_server_config.apt_dev | default('no') | bool }}"
  - name: stress-ng
    install: "{{ install_server_config.apt_dev | default('no') | bool }}"
  # ----------------------------------------------------------------------------
  - name: freeglut3-dev
    install: "{{ install_server_config.apt_build | default('no') | bool }}"
  - name: cmake
    install: "{{ install_server_config.apt_build | default('no') | bool }}"
  - name: g++
    install: "{{ install_server_config.apt_build | default('no') | bool }}"
  - name: build-essential
    install: "{{ install_server_config.apt_build | default('no') | bool }}"
  - name: autoconf
    install: "{{ install_server_config.apt_build | default('no') | bool }}"
  - name: pkg-config
    install: "{{ install_server_config.apt_build | default('no') | bool }}"
  - name: mesa-utils
    install: "{{ install_server_config.apt_build | default('no') | bool }}"
  # ----------------------------------------------------------------------------
  - name: libstdc++6
    install: "{{ install_server_config.apt_libs | default('no') | bool }}"
  # ----------------------------------------------------------------------------
  - name: libgl1-mesa-dev
    install: "{{ install_server_config.apt_libs | default('no') | bool }}"
  - name: libegl1-mesa-dev
    install: "{{ install_server_config.apt_libs | default('no') | bool }}"
  - name: libgles2-mesa-dev
    install: "{{ install_server_config.apt_libs | default('no') | bool }}"
  # ----------------------------------------------------------------------------
  - name: libnet1-dev
    install: "{{ install_server_config.apt_libs | default('no') | bool }}"
  - name: libnet1
    install: "{{ install_server_config.apt_libs | default('no') | bool }}"
  - name: libpcap0.8-dev
    install: "{{ install_server_config.apt_libs | default('no') | bool }}"
  - name: libpcap0.8
    install: "{{ install_server_config.apt_libs | default('no') | bool }}"
  - name: libpcap-dev
    install: "{{ install_server_config.apt_libs | default('no') | bool }}"
  # ----------------------------------------------------------------------------
  - name: libssl-dev
    install: "{{ install_server_config.apt_libs | default('no') | bool }}"
  - name: zlib1g-dev
    install: "{{ install_server_config.apt_libs | default('no') | bool }}"
  # ----------------------------------------------------------------------------
  - name: libxml2-dev
    install: "{{ install_server_config.apt_libs | default('no') | bool }}"
  - name: libxslt1-dev
    install: "{{ install_server_config.apt_libs | default('no') | bool }}"
  - name: libffi-dev
    install: "{{ install_server_config.apt_libs | default('no') | bool }}"
  - name: libpq-dev
    install: "{{ install_server_config.apt_libs | default('no') | bool }}"
  # ----------------------------------------------------------------------------
  - name: libgirepository1.0-dev
    install: "{{ install_server_config.apt_libs | default('no') | bool }}"
  - name: libgpgme-dev
    install: "{{ install_server_config.apt_libs | default('no') | bool }}"
  - name: libboost-dev
    install: "{{ install_server_config.apt_libs | default('no') | bool }}"
  # ----------------------------------------------------------------------------
  - name: php
    install: "{{ install_server_config.apt_php | default('no') | bool }}"
  - name: php-gmp
    install: "{{ install_server_config.apt_php | default('no') | bool }}"
  - name: php-curl
    install: "{{ install_server_config.apt_php | default('no') | bool }}"
  - name: php-intl
    install: "{{ install_server_config.apt_php | default('no') | bool }}"
  - name: php-mbstring
    install: "{{ install_server_config.apt_php | default('no') | bool }}"
  - name: php-xmlrpc
    install: "{{ install_server_config.apt_php | default('no') | bool }}"
  - name: php-mysql
    install: "{{ install_server_config.apt_php | default('no') | bool }}"
  - name: php-gd
    install: "{{ install_server_config.apt_php | default('no') | bool }}"
  - name: php-xml
    install: "{{ install_server_config.apt_php | default('no') | bool }}"
  - name: php-zip
    install: "{{ install_server_config.apt_php | default('no') | bool }}"
  # ----------------------------------------------------------------------------
  - name: "lua{{ install_server_links_to_check_update.lua_version }}"
    install: "{{ install_server_config.apt_lua | default('no') | bool }}"
  - name: "liblua{{ install_server_links_to_check_update.lua_version }}-dev"
    install: "{{ install_server_config.apt_lua | default('no') | bool }}"
  - name: luarocks
    install: "{{ install_server_config.apt_lua | default('no') | bool }}"
  - name: "openjdk-{{ install_server_links_to_check_update.java_version }}-jre-headless"
    install: "{{ install_server_config.apt_java_jre_headless | default('no') | bool }}"
  - name: "openjdk-{{ install_server_links_to_check_update.java_version }}-jdk"
    install: "{{ install_server_config.apt_java_jdk | default('no') | bool }}"
  - name: ant
    install: "{{ install_server_config.apt_java_ant | default('no') | bool }}"
  - name: maven
    install: "{{ install_server_config.apt_java_maven | default('no') | bool }}"
  - name: gradle
    install: "{{ install_server_config.apt_java_gradle | default('no') | bool }}"
  # ----------------------------------------------------------------------------
  - name: snapd
    install: "{{ install_server_config.apt_snap | default('no') | bool }}"
  # ----------------------------------------------------------------------------
  - name: qemu-guest-agent
    install: "{{ install_server_config.apt_qemu_guest_agent | default('no') | bool }}"
  # ----------------------------------------------------------------------------
  - name: linux-modules-extra-raspi
    install: "{{ install_server_config.apt_rasp_pi_pkg | default('no') | bool }}"
  # ----------------------------------------------------------------------------
  - name: resolvconf
    install: "{{ install_server_config.apt_vpn_resolvconf | default('no') | bool }}"
  - name: wireguard
    install: "{{ install_server_config.apt_vpn_wireguard | default('no') | bool }}"
  - name: openvpn
    install: "{{ install_server_config.apt_vpn_openvpn | default('no') | bool }}"
  - name: openvpn-systemd-resolved
    install: "{{ install_server_config.apt_vpn_openvpn | default('no') | bool }}"
  - name: openconnect
    install: "{{ install_server_config.apt_vpn_openconnect | default('no') | bool }}"
  # --------------------------------
  - name: texlive-full
    install: "{{ install_server_config.apt_latex | default('no') | bool }}"
  - name: texlive-lang-german
    install: "{{ install_server_config.apt_latex | default('no') | bool }}"
  - name: texlive
    install: "{{ install_server_config.apt_latex | default('no') | bool }}"
  - name: texlive-latex-extra
    install: "{{ install_server_config.apt_latex | default('no') | bool }}"
  - name: latexmk
    install: "{{ install_server_config.apt_latex | default('no') | bool }}"
  - name: biber
    install: "{{ install_server_config.apt_latex | default('no') | bool }}"
  # --------------------------------
  # https://github.com/Wandmalfarbe/pandoc-latex-template
  - name: pandoc
    install: "{{ install_server_config.apt_pandoc | default('no') | bool }}"
  - name: texlive-xetex
    install: "{{ install_server_config.apt_pandoc | default('no') | bool }}"
  - name: texlive-extra-utils
    install: "{{ install_server_config.apt_pandoc | default('no') | bool }}"
  # - name: texlive-fonts-extra
  #   install: "{{ install_server_config.apt_pandoc | default('no') | bool }}"
  - name: texlive-latex-base
    install: "{{ install_server_config.apt_pandoc | default('no') | bool }}"
  - name: texlive-fonts-recommended
    install: "{{ install_server_config.apt_pandoc | default('no') | bool }}"
  - name: texlive-latex-extra
    install: "{{ install_server_config.apt_pandoc | default('no') | bool }}"
  # --------------------------------
  - name: john
    install: "{{ install_server_config.apt_apt_john_the_ripper | default('no') | bool }}"
  - name: nmap
    install: "{{ install_server_config.apt_nmap | default('no') | bool }}"

# ------------------------------------------------------------------------------
# DPKG packages
# install_server_config.dpkg_...
install_server_dpkg: []

# ------------------------------------------------------------------------------
# SNAP packages
# install_server_config.snap_...
install_server_snap:
  - name: juju
    classic: true
    install: "{{ install_server_config.snap_juju | default('no') | bool }}"
  - name: maas
    classic: false
    install: "{{ install_server_config.snap_maas | default('no') | bool }}"
  - name: microk8s
    classic: true
    install: "{{ install_server_config.snap_microk8s | default('no') | bool }}"
  - name: kubectl
    classic: true
    install: "{{ install_server_config.snap_kubectl | default('no') | bool }}"
  - name: helm
    classic: true
    install: "{{ install_server_config.snap_helm | default('no') | bool }}"
  - name: multipass
    classic: false
    install: "{{ install_server_config.snap_multipass | default('no') | bool }}"
  # ----------------------------------------------------------------------------
  - name: btop
    classic: false
    install: "{{ install_server_config.snap_btop | default('no') | bool }}"
  - name: glow
    classic: false
    install: "{{ install_server_config.snap_glow | default('no') | bool }}"
  # ----------------------------------------------------------------------------
  - name: go
    classic: true
    install: "{{ install_server_config.snap_go | default('no') | bool }}"
  - name: httpie
    classic: false
    install: "{{ install_server_config.snap_httpie | default('no') | bool }}"
  - name: node
    classic: true
    channel: "{{ install_server_links_to_check_update.snap_node_version }}/stable"
    install: "{{ install_server_config.snap_node | default('no') | bool }}"
  - name: ruby
    classic: true
    install: "{{ install_server_config.snap_ruby | default('no') | bool }}"
  - name: rustup
    classic: true
    install: "{{ install_server_config.snap_rust | default('no') | bool }}"
  - name: shellcheck
    classic: false
    install: "{{ install_server_config.snap_shellcheck | default('no') | bool }}"
  - name: openjdk
    classic: false
    install: "{{ install_server_config.snap_openjdk | default('no') | bool }}"
  - name: openjfx
    classic: false
    install: "{{ install_server_config.snap_openjfx | default('no') | bool }}"
  # ----------------------------------------------------------------------------
  - name: john-the-ripper
    install: "{{ install_server_config.snap_john_the_ripper | default('no') | bool }}"
  - name: nmap
    install: "{{ install_server_config.snap_nmap | default('no') | bool }}"

# # ------------------------------------------------------------------------------
# # FLATPAK
# install_server_flatpak_remotes:
#   - name: flathub
#     url: https://dl.flathub.org/repo/flathub.flatpakrepo
#     method: system
#     install: true
#   - name: flathub-beta
#     url: https://flathub.org/beta-repo/flathub-beta.flatpakrepo
#     method: system
#     install: true
# # install_server_config.flatpak_...
# install_server_flatpak:
#   - name: com.openwall.John
#     install: "{{ install_server_config.flatpak_john_the_ripper | default('no') | bool }}"
#   - name: org.nmap.Zenmap
#     install: "{{ install_server_config.flatpak_nmap | default('no') | bool }}"

# ------------------------------------------------------------------------------
# GIT
# install_server_config.inst_git_conf
install_server_git_user: "{{ ansible_user }}"
install_server_git_email: "{{ ansible_user }}"
install_server_git:
  apt:
    - git
  git:
    config:
      - key: user.email
        value: "{{ install_server_git_email }}"
        scope: global
      - key: user.name
        value: "{{ install_server_git_user }}"
        scope: global
      - key: init.defaultBranch
        value: main
        scope: global
      - key: pull.ff
        value: only
        scope: global
      - key: diff.tool
        value: nvimdiff
        scope: global
      # - key: difftool.prompt
      #   value: "false"
      #   scope: global
    hook:
      base_path: ~/.git-hooks
      files:
        - template: "commit-msg.j2"
          filename: "commit-msg"
        - template: "pre-commit.j2"
          filename: "pre-commit"

# ------------------------------------------------------------------------------
# FONTS
# install_server_config.inst_fonts
# https://github.com/ryanoasis/nerd-fonts/releases
install_server_fonts:
  fonts_dst: ~/.local/share/fonts/nerd-fonts
  fonts_src:
    - https://github.com/ryanoasis/nerd-fonts/releases/download/v3.2.1/NerdFontsSymbolsOnly.tar.xz
    - https://github.com/ryanoasis/nerd-fonts/releases/download/v3.2.1/FiraCode.tar.xz
    - https://github.com/ryanoasis/nerd-fonts/releases/download/v3.2.1/Hack.tar.xz
    - https://github.com/ryanoasis/nerd-fonts/releases/download/v3.2.1/UbuntuMono.tar.xz
    - https://github.com/ryanoasis/nerd-fonts/releases/download/v3.2.1/FiraMono.tar.xz
    - https://github.com/ryanoasis/nerd-fonts/releases/download/v3.2.1/RobotoMono.tar.xz
    - https://github.com/ryanoasis/nerd-fonts/releases/download/v3.2.1/ProggyClean.tar.xz

# ------------------------------------------------------------------------------
# ZSH
# install_server_config.inst_zsh_conf
install_server_zsh_user_home: "~"
install_server_zsh_custom_folder: "{{ install_server_zsh_user_home }}/.oh-my-zsh/custom"
install_server_zsh:
  update: false
  zsh_themes_folder: "{{ install_server_zsh_user_home }}/.oh-my-zsh/themes"
  zshrc_folder: "{{ install_server_zsh_user_home }}/.zshrc"
  apt:
    - zsh
  git:
    ohmyzsh:
      url: https://github.com/robbyrussell/oh-my-zsh.git
      folder: "{{ install_server_zsh_user_home }}/.oh-my-zsh"
      version: master
    themes:
      - url: https://github.com/denysdovhan/spaceship-prompt.git
        name: spaceship
        theme_name: spaceship.zsh-theme
        version: master
      - url: https://github.com/Moarram/headline.git
        name: headline
        theme_name: headline.zsh-theme
        version: main
      - url: https://github.com/romkatv/powerlevel10k.git
        name: powerlevel10k
        theme_name: powerlevel10k.zsh-theme
        version: master
    zshEnableSourcePlugs:
      - url: https://github.com/zsh-users/zsh-autosuggestions.git
        folder: "{{ install_server_zsh_custom_folder }}/plugins/zsh-autosuggestions"
      - url: https://github.com/zsh-users/zsh-syntax-highlighting.git
        folder: "{{ install_server_zsh_custom_folder }}/plugins/zsh-syntax-highlighting"
  # spaceship | agnoster
  theme: spaceship
  ## https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins
  plugins: >
    colored-man-pages
    command-not-found
    docker
    git
    gitignore
    golang
    helm
    history
    kubectl
    lxd
    nmap
    npm
    oc
    pip
    httpie
    pylint
    rust
    sudo
    terraform
    tmux
    ubuntu
    ufw
    zsh-autosuggestions
    zsh-syntax-highlighting
  append_file:
    - template: zshrc-append.j2
      path: ~/.zshrc-append
      append_as: source ~/.zshrc-append

# ------------------------------------------------------------------------------
# TMUX
# install_server_config.inst_tmux_conf
install_server_tmux_file: ~/.tmux.conf
install_server_tmux_path: ~/.tmux
install_server_tmux_path_plugins: ~/.tmux/plugins
install_server_tmux_path_script: ~/.local/bin
install_server_tmux:
  apt_dependencies:
    - git
    - fzf
    - automake
    - pkg-config
    - build-essential
    - libevent-dev
    - libncurses5-dev
    - bison
  git: https://github.com/tmux/tmux.git
  git_version: master
  update: true
  plugins:
    - git: https://github.com/tmux-plugins/tpm.git
      path: "{{ install_server_tmux_path_plugins }}/tpm"
      version: master
      conf: "set -g @plugin 'tmux-plugins/tpm'"
      run: "run '{{ install_server_tmux_path_plugins }}/tpm/tpm'"
    - git: https://github.com/tmux-plugins/tmux-sensible.git
      path: "{{ install_server_tmux_path_plugins }}/tmux-sensible"
      version: master
      conf: "set -g @plugin 'tmux-plugins/tmux-sensible'"
    # - git: https://github.com/tmux-plugins/tmux-resurrect.git
    #   path: "{{ install_server_tmux_path_plugins }}/tmux-resurrect"
    #   version: master
    #   conf: "set -g @plugin 'tmux-plugins/tmux-resurrect'"
    # - git: https://github.com/tmux-plugins/tmux-continuum.git
    #   path: "{{ install_server_tmux_path_plugins }}/tmux-continuum"
    #   version: master
    #   conf: "set -g @plugin 'tmux-plugins/tmux-continuum'"
    - git: https://github.com/tmux-plugins/tmux-yank.git
      path: "{{ install_server_tmux_path_plugins }}/tmux-yank"
      version: master
      conf: "set -g @plugin 'tmux-plugins/tmux-yank'"
    - git: https://github.com/catppuccin/tmux.git
      path: "{{ install_server_tmux_path_plugins }}/catppuccin"
      version: main
      conf: "set -g @plugin 'catppuccin/tmux'"
    - git: https://github.com/tmux-plugins/tmux-battery.git
      path: "{{ install_server_tmux_path_plugins }}/tmux-battery"
      version: master
      conf: "set -g @plugin 'tmux-plugins/tmux-battery'"
    - git: https://github.com/tmux-plugins/tmux-cpu.git
      path: "{{ install_server_tmux_path_plugins }}/tmux-cpu"
      version: master
      conf: "set -g @plugin 'tmux-plugins/tmux-cpu'"
  append_source_files:
    - "{{ install_server_tmux_path }}/setup.conf"
    - "{{ install_server_tmux_path }}/remap.conf"
  append_style_files:
    - "{{ install_server_tmux_path }}/style.conf"
  add_conf_files:
    - setup.conf
    - remap.conf
    - style.conf
  add_script_files:
    - tmux-sessionizer

# ------------------------------------------------------------------------------
# NVIM
# install_server_config.inst_nvim_conf
# TheVimeagen - Neovim Config: https://www.youtube.com/watch?v=ZWWxwwUsPNw
install_server_nvim_group: vm
install_server_nvim:
  apt_dependencies:
    - git
    - ripgrep
    - fd-find
    - ninja-build
    - gettext
    - cmake
    - unzip
    - curl
    - build-essential
  git: https://github.com/neovim/neovim.git
  git_version: master
  update: true
  folders:
    - "~/.config/nvim/lua/{{ install_server_nvim_group }}/lazy"
  configs:
    - path_dest: ~/.config/nvim
      path_src: nvim
      files:
        - init.lua
    - path_dest: "~/.config/nvim/lua/{{ install_server_nvim_group }}"
      path_src: nvim/lua
      files:
        - init.lua
        - remap.lua
        - set.lua
        - lazy_init.lua
    - path_dest: "~/.config/nvim/lua/{{ install_server_nvim_group }}/lazy"
      path_src: nvim/lazy
      files:
        - cloak.lua
        - cmp.lua
        - colors.lua
        - copilot.lua
        - git.lua
        - harpoon.lua
        - init.lua
        - lsp.lua
        - lualine.lua
        - markdown.lua
        - snippets.lua
        - spectre.lua
        - telescope.lua
        - treesitter.lua
        - trouble.lua
        - undotree.lua
        - zenmode.lua

# ------------------------------------------------------------------------------
# PYTHON
# install_server_config.python
install_server_python:
  apt:
    - name: python3
      install: "{{ install_server_config.apt_python | default('no') | bool }}"
    - name: python3-setuptools
      install: "{{ install_server_config.apt_python | default('no') | bool }}"
    - name: python3-debian
      install: "{{ install_server_config.apt_python | default('no') | bool }}"
    - name: sshpass
      install: "{{ install_server_config.apt_python | default('no') | bool }}"
    - name: python3-pip
      install: "{{ install_server_config.apt_python_pip | default('no') | bool }}"
    - name: python3-venv
      install: "{{ install_server_config.apt_python_venv | default('no') | bool }}"
    - name: python3-dev
      install: "{{ install_server_config.apt_python_dev | default('no') | bool }}"
    # NOTE: missing libs when updating python
    - name: libcairo2-dev
      install: "{{ install_server_config.apt_python_pip | default('no') | bool }}"
    - name: libgirepository1.0-dev
      install: "{{ install_server_config.apt_python_pip | default('no') | bool }}"
  pip:
    - name: s-tui
      install: "{{ install_server_config.pip_s_tui | default('no') | bool }}"
    - name: virtualenv
      install: "{{ install_server_config.pip_virtualenv | default('no') | bool }}"
    - name: ruff
      install: "{{ install_server_config.pip_ruff | default('no') | bool }}"
    - name: autopep8
      install: "{{ install_server_config.pip_autopep8 | default('no') | bool }}"
    - name: black
      install: "{{ install_server_config.pip_black | default('no') | bool }}"
    - name: mypy
      install: "{{ install_server_config.pip_mypy | default('no') | bool }}"
    - name: pre-commit
      install: "{{ install_server_config.pip_pre_commit | default('no') | bool }}"
    - name: openconnect-sso
      install: "{{ install_server_config.pip_openconnect_sso | default('no') | bool }}"
    - name: ansible
      install: "{{ install_server_config.pip_ansible | default('no') | bool }}"
    - name: ansible-lint
      install: "{{ install_server_config.pip_ansible | default('no') | bool }}"

# ------------------------------------------------------------------------------
# TODO: GO packages
# install_server_config.go_...
install_server_go_sources:
  - source: github.com/kubernetes/kompose@latest
    install: "{{ install_server_config.go_kompose | default('no') | bool }}"
  - source: github.com/nektos/act@latest
    install: "{{ install_server_config.go_act | default('no') | bool }}"

# ------------------------------------------------------------------------------
# NPM
# install_server_config.npm_...
install_server_npm_pkg:
  - source: typescript
    install: "{{ install_server_config.npm_typescript | default('no') | bool }}"
# - "@angular/cli"
# - jshint
# - ts-node
# - tslint
# - nodemon
# - pm2

# ------------------------------------------------------------------------------
# JAVA
# install_server_config.java
install_server_java:
  os_env:
    - variable: JAVA_HOME
      path: "/usr/lib/jvm/java-{{ install_server_links_to_check_update.java_version }}-openjdk-amd64"
