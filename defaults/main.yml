---
# defaults file for ./roles/install_server

# ------------------------------------------------------------------------------
# CLIENTS for adding access (ex. zsh)
clients:
  - name: "{{ ansible_user }}"

# ------------------------------------------------------------------------------
install_server_service_name: default-server

install_server_links_to_check_update:
  mongodb_pgp: https://www.mongodb.org/static/pgp/server-6.0.asc
  mongodb_distribution: focal/mongodb-org/6.0
  # https://github.com/nodesource/distributions/blob/master/README.md
  npm_url: https://deb.nodesource.com/setup_lts.x
  npm_file: setup_lts.x.sh

# ------------------------------------------------------------------------------
# WHAT TO INSTALL
install_server_config:
  dev: false
  env_tun_setup: false
  # APT (1) -------------------------------
  apt_base: false
  apt_archive: false
  apt_dev: false
  apt_build: false
  apt_libs: false
  # APT (2) -------------------------------
  apt_snap: false
  apt_vpn: false
  apt_php: false
  apt_rasp_pi_pkg: false
  apt_qemu_guest_agent: false
  # DPKG ----------------------------------
  # dpkg_...: false
  # SNAP ----------------------------------
  snap_juju: false
  snap_maas: false
  snap_microk8s: false
  snap_kubectl: false
  snap_helm: false
  snap_multipass: false
  snap_btop: false
  snap_glow: false
  snap_go: false
  # OTHER --------------------------------
  git: false
  zsh: false
  tmux: false
  # PYTHON --------------------------------
  python: false
  python_pip: false
  python_venv: false
  python_dev: false
  pip_s_tui: false
  pip_virtualenv: false
  pip_autopep8: false
  pip_black: false
  pip_pre_commit: false
  pip_openconnect_sso: false
  pip_ansible: false
  # OTHER --------------------------------
  go_kompose: false
  ruby: false
  npm: false
  mongodb: false
  java: false
  java_ant: false

# ------------------------------------------------------------------------------
# APT
# install_server_config.apt_...
install_server_apt:
  # --------------------------------
  - name: dirmngr
    install: "{{ install_server_config.apt_base | default('no') | bool }}"
  - name: curl
    install: "{{ install_server_config.apt_base | default('no') | bool }}"
  - name: git
    install: "{{ install_server_config.apt_base | default('no') | bool }}"
  - name: git-flow
    install: "{{ install_server_config.apt_base | default('no') | bool }}"
  - name: vim
    install: "{{ install_server_config.apt_base | default('no') | bool }}"
  - name: exa
    install: "{{ install_server_config.apt_base | default('no') | bool }}"
  - name: bat
    install: "{{ install_server_config.apt_base | default('no') | bool }}"
  - name: duf
    install: "{{ install_server_config.apt_base | default('no') | bool }}"
  - name: libpam-u2f
    install: "{{ install_server_config.apt_base | default('no') | bool }}"
  - name: libfido2-dev
    install: "{{ install_server_config.apt_base | default('no') | bool }}"
  # --------------------------------
  - name: openssl
    install: "{{ install_server_config.apt_base | default('no') | bool }}"
  - name: ca-certificates
    install: "{{ install_server_config.apt_base | default('no') | bool }}"
  - name: apt-transport-https
    install: "{{ install_server_config.apt_base | default('no') | bool }}"
  - name: gnupg
    install: "{{ install_server_config.apt_base | default('no') | bool }}"
  # --------------------------------
  - name: rar
    install: "{{ install_server_config.apt_archive | default('no') | bool }}"
  - name: unrar
    install: "{{ install_server_config.apt_archive | default('no') | bool }}"
  - name: zip
    install: "{{ install_server_config.apt_archive | default('no') | bool }}"
  - name: p7zip-full
    install: "{{ install_server_config.apt_archive | default('no') | bool }}"
  - name: xz-utils
    install: "{{ install_server_config.apt_archive | default('no') | bool }}"
  - name: pigz
    install: "{{ install_server_config.apt_archive | default('no') | bool }}"
  # ----------------------------------------------------------------------------
  # monitoring: lsof|tcpdump -i ...|netstat -a | more|htop|iotop|iostat|s-tui|watch zpool iostat -vy 1 1|smem -tuwa|bpytop
  - name: jq
    install: "{{ install_server_config.apt_dev | default('no') | bool }}"
  - name: iftop
    install: "{{ install_server_config.apt_dev | default('no') | bool }}"
  - name: htop
    install: "{{ install_server_config.apt_dev | default('no') | bool }}"
  - name: iotop
    install: "{{ install_server_config.apt_dev | default('no') | bool }}"
  - name: nvtop
    install: "{{ install_server_config.apt_dev | default('no') | bool }}"
  - name: powertop
    install: "{{ install_server_config.apt_dev | default('no') | bool }}"
  - name: sysstat
    install: "{{ install_server_config.apt_dev | default('no') | bool }}"
  - name: sysbench
    install: "{{ install_server_config.apt_dev | default('no') | bool }}"
  - name: smem
    install: "{{ install_server_config.apt_dev | default('no') | bool }}"
  - name: iozone3
    install: "{{ install_server_config.apt_dev | default('no') | bool }}"
  - name: haveged
    install: "{{ install_server_config.apt_dev | default('no') | bool }}"
  - name: ethtool
    install: "{{ install_server_config.apt_dev | default('no') | bool }}"
  - name: net-tools
    install: "{{ install_server_config.apt_dev | default('no') | bool }}"
  - name: iperf3
    install: "{{ install_server_config.apt_dev | default('no') | bool }}"
  - name: stress
    install: "{{ install_server_config.apt_dev | default('no') | bool }}"
  - name: stress-ng
    install: "{{ install_server_config.apt_dev | default('no') | bool }}"
  # ----------------------------------------------------------------------------
  # - name: exfat-fuse
  #   install: "{{ install_server_config.apt_exfat | default('no') | bool }}"
  # - name: exfat-utils
  #   install: "{{ install_server_config.apt_exfat | default('no') | bool }}"
  # ----------------------------------------------------------------------------
  # TODO:: check, not found on lunar
  #- name: freeglut3
  #  install: "{{ install_server_config.apt_build | default('no') | bool }}"
  - name: freeglut3-dev
    install: "{{ install_server_config.apt_build | default('no') | bool }}"
  - name: cmake
    install: "{{ install_server_config.apt_build | default('no') | bool }}"
  - name: g++
    install: "{{ install_server_config.apt_build | default('no') | bool }}"
  - name: build-essential
    install: "{{ install_server_config.apt_build | default('no') | bool }}"
  - name: autoconf
    install: "{{ install_server_config.apt_build | default('no') | bool }}"
  - name: pkg-config
    install: "{{ install_server_config.apt_build | default('no') | bool }}"
  - name: mesa-utils
    install: "{{ install_server_config.apt_build | default('no') | bool }}"
  # ----------------------------------------------------------------------------
  # - name: lib32z1
  #   install: false
  - name: libstdc++6
    install: "{{ install_server_config.apt_libs | default('no') | bool }}"
  # ----------------------------------------------------------------------------
  - name: libgl1-mesa-dev
    install: "{{ install_server_config.apt_libs | default('no') | bool }}"
  - name: libegl1-mesa-dev
    install: "{{ install_server_config.apt_libs | default('no') | bool }}"
  - name: libgles2-mesa
    install: "{{ install_server_config.apt_libs | default('no') | bool }}"
  - name: libgles2-mesa-dev
    install: "{{ install_server_config.apt_libs | default('no') | bool }}"
  # ----------------------------------------------------------------------------
  - name: libnet1-dev
    install: "{{ install_server_config.apt_libs | default('no') | bool }}"
  - name: libnet1
    install: "{{ install_server_config.apt_libs | default('no') | bool }}"
  - name: libpcap0.8-dev
    install: "{{ install_server_config.apt_libs | default('no') | bool }}"
  - name: libpcap0.8
    install: "{{ install_server_config.apt_libs | default('no') | bool }}"
  - name: libpcap-dev
    install: "{{ install_server_config.apt_libs | default('no') | bool }}"
  # ----------------------------------------------------------------------------
  - name: libssl-dev
    install: "{{ install_server_config.apt_libs | default('no') | bool }}"
  - name: zlib1g-dev
    install: "{{ install_server_config.apt_libs | default('no') | bool }}"
  # ----------------------------------------------------------------------------
  - name: libxml2-dev
    install: "{{ install_server_config.apt_libs | default('no') | bool }}"
  - name: libxslt1-dev
    install: "{{ install_server_config.apt_libs | default('no') | bool }}"
  - name: libffi-dev
    install: "{{ install_server_config.apt_libs | default('no') | bool }}"
  - name: libpq-dev
    install: "{{ install_server_config.apt_libs | default('no') | bool }}"
  # ----------------------------------------------------------------------------
  - name: libgirepository1.0-dev
    install: "{{ install_server_config.apt_libs | default('no') | bool }}"
  - name: libgpgme-dev
    install: "{{ install_server_config.apt_libs | default('no') | bool }}"
  - name: libboost-dev
    install: "{{ install_server_config.apt_libs | default('no') | bool }}"
  # ----------------------------------------------------------------------------
  - name: resolvconf
    install: "{{ install_server_config.apt_vpn | default('no') | bool }}"
  - name: wireguard
    install: "{{ install_server_config.apt_vpn | default('no') | bool }}"
  - name: openvpn
    install: "{{ install_server_config.apt_vpn | default('no') | bool }}"
  - name: openvpn-systemd-resolved
    install: "{{ install_server_config.apt_vpn | default('no') | bool }}"
  # - name: network-manager-openvpn
  #   install: "{{ install_server_config.apt_vpn | default('no') | bool }}"
  - name: openconnect
    install: "{{ install_server_config.apt_vpn | default('no') | bool }}"
  # - name: network-manager-openconnect
  #   install: "{{ install_server_config.apt_vpn | default('no') | bool }}"
  # - name: l2tp
  #   install: "{{ install_server_config.apt_vpn | default('no') | bool }}"
  # - name: network-manager-l2tp
  #   install: "{{ install_server_config.apt_vpn | default('no') | bool }}"
  # ----------------------------------------------------------------------------
  - name: snapd
    install: "{{ install_server_config.apt_snap | default('no') | bool }}"
  # ----------------------------------------------------------------------------
  - name: php
    install: "{{ install_server_config.apt_php | default('no') | bool }}"
  - name: php-gmp
    install: "{{ install_server_config.apt_php | default('no') | bool }}"
  - name: php-curl
    install: "{{ install_server_config.apt_php | default('no') | bool }}"
  - name: php-intl
    install: "{{ install_server_config.apt_php | default('no') | bool }}"
  - name: php-mbstring
    install: "{{ install_server_config.apt_php | default('no') | bool }}"
  - name: php-xmlrpc
    install: "{{ install_server_config.apt_php | default('no') | bool }}"
  - name: php-mysql
    install: "{{ install_server_config.apt_php | default('no') | bool }}"
  - name: php-gd
    install: "{{ install_server_config.apt_php | default('no') | bool }}"
  - name: php-xml
    install: "{{ install_server_config.apt_php | default('no') | bool }}"
  - name: php-zip
    install: "{{ install_server_config.apt_php | default('no') | bool }}"
  # ----------------------------------------------------------------------------
  - name: linux-modules-extra-raspi
    install: "{{ install_server_config.apt_rasp_pi_pkg | default('no') | bool }}"
  # ----------------------------------------------------------------------------
  - name: qemu-guest-agent
    install: "{{ install_server_config.apt_qemu_guest_agent | default('no') | bool }}"

# ------------------------------------------------------------------------------
# DPKG packages
# install_server_config.dpkg_...
install_server_dpkg: []

# ------------------------------------------------------------------------------
# SNAP packages
# install_server_config.snap_...
install_server_snap:
  - name: juju
    classic: true
    install: "{{ install_server_config.snap_juju | default('no') | bool }}"
  - name: maas
    classic: false
    install: "{{ install_server_config.snap_maas | default('no') | bool }}"
  - name: microk8s
    classic: true
    install: "{{ install_server_config.snap_microk8s | default('no') | bool }}"
  - name: kubectl
    classic: true
    install: "{{ install_server_config.snap_kubectl | default('no') | bool }}"
  - name: helm
    classic: true
    install: "{{ install_server_config.snap_helm | default('no') | bool }}"
  - name: multipass
    classic: false
    install: "{{ install_server_config.snap_multipass | default('no') | bool }}"
  # ----------------------------------------------------------------------------
  - name: btop
    classic: false
    install: "{{ install_server_config.snap_btop | default('no') | bool }}"
  - name: glow
    classic: false
    install: "{{ install_server_config.snap_glow | default('no') | bool }}"
  # ----------------------------------------------------------------------------
  - name: go
    classic: true
    install: "{{ install_server_config.snap_go | default('no') | bool }}"

# ------------------------------------------------------------------------------
# GIT
# install_server_config.git
install_server_git_user: "{{ ansible_user }}"
install_server_git_email: "{{ ansible_user }}"
install_server_git:
  apt:
    - git
    - git-flow
  git:
    config:
      - key: user.email
        value: "{{ install_server_git_email }}"
        scope: global
      - key: user.name
        value: "{{ install_server_git_user }}"
        scope: global
      - key: init.defaultBranch
        value: main
        scope: global
      - key: pull.ff
        value: only
        scope: global
    hook:
      base_path: ~/.git-hooks
      files:
        - template: "commit-msg.j2"
          filename: "commit-msg"
        - template: "pre-commit.j2"
          filename: "pre-commit"

# ------------------------------------------------------------------------------
# ZSH
# install_server_config.zsh
install_server_zsh_user_home: "~"
install_server_zsh_custom_folder: "{{ install_server_zsh_user_home }}/.oh-my-zsh/custom"
install_server_zsh:
  update: false
  zsh_themes_folder: "{{ install_server_zsh_user_home }}/.oh-my-zsh/themes"
  zshrc_folder: "{{ install_server_zsh_user_home }}/.zshrc"
  apt:
    - zsh
    - powerline
    - fonts-powerline
    - fonts-font-awesome
  git:
    ohmyzsh:
      url: https://github.com/robbyrussell/oh-my-zsh.git
      folder: "{{ install_server_zsh_user_home }}/.oh-my-zsh"
      version: master
    themes:
      - url: https://github.com/denysdovhan/spaceship-prompt.git
        name: spaceship
        theme_name: spaceship.zsh-theme
        version: master
      - url: https://github.com/Moarram/headline.git
        name: headline
        theme_name: headline.zsh-theme
        version: main
      - url: https://github.com/romkatv/powerlevel10k.git
        name: powerlevel10k
        theme_name: powerlevel10k.zsh-theme
        version: master
    zshEnableSourcePlugs:
      - url: https://github.com/zsh-users/zsh-autosuggestions.git
        folder: "{{ install_server_zsh_custom_folder }}/plugins/zsh-autosuggestions"
      - url: https://github.com/zsh-users/zsh-syntax-highlighting.git
        folder: "{{ install_server_zsh_custom_folder }}/plugins/zsh-syntax-highlighting"
  # spaceship | agnoster
  theme: spaceship
  ## https://github.com/ohmyzsh/ohmyzsh/tree/master/plugins
  plugins: >
    zsh-autosuggestions
    zsh-syntax-highlighting
    ubuntu
    sudo
    history
    man
    colored-man-pages
    command-not-found
    vim-interaction
    ufw
    cp
    lxd
    tmux
    git
    git-flow
    gitignore
    vscode
    terraform
    ansible
    docker
    docker-compose
    kubectl
    helm
    oc
    python
    pip
    node
    npm
    golang
    rust
    ruby
    bundler
    adb
    nmap
    web-search
  append_file:
    - template: zshrc-append.j2
      path: ~/.zshrc-append
      append_as: source ~/.zshrc-append
    # - append_as: source /usr/share/zsh-autosuggestions/zsh-autosuggestions.zsh 2>/dev/null
    # - append_as: source /usr/share/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh 2>/dev/null

# ------------------------------------------------------------------------------
# TMUX
# install_server_config.tmux
# https://github.com/gpakosz/.tmux#configuration
# https://gist.github.com/henrik/1967800
install_server_tmux:
  update: true
  git: https://github.com/tmux/tmux.git
  style:
    git: https://github.com/gpakosz/.tmux.git
  apt_dependecies:
    - build-essential
    - git-core
    - wget
    - tar
    - libevent-dev
    - libncurses-dev
    - autoconf
    - automake
    - pkg-config
    - bison
    - xclip
  aliases: true
  # aliases_path: "~/.bashrc"
  aliases_path: "~/.zshrc"

# ------------------------------------------------------------------------------
# OS TUNNING'S
# install_server_config.env_tun_setup
install_server_os_tun:
  install: "{{ install_server_config.env_tun_setup | default('no') | bool }}"

# ------------------------------------------------------------------------------
# PYTHON
# install_server_config.python
install_server_python:
  apt:
    - name: python3
      install: "{{ install_server_config.python | default('no') | bool }}"
    - name: python3-setuptools
      install: "{{ install_server_config.python | default('no') | bool }}"
    - name: python3-debian
      install: "{{ install_server_config.python | default('no') | bool }}"
    - name: python3-pip
      install: "{{ install_server_config.python_pip | default('no') | bool }}"
    - name: python3-venv
      install: "{{ install_server_config.python_venv | default('no') | bool }}"
    - name: python3-dev
      install: "{{ install_server_config.python_dev | default('no') | bool }}"
    - name: sshpass
      install: "{{ install_server_config.pip_ansible | default('no') | bool }}"
    # NOTE: missing libs when updating python
    - name: libcairo2-dev
      install: "{{ install_server_config.python_pip | default('no') | bool }}"
    - name: libgirepository1.0-dev
      install: "{{ install_server_config.python_pip | default('no') | bool }}"
  pip:
    - name: s-tui
      install: "{{ install_server_config.pip_s_tui | default('no') | bool }}"
    - name: virtualenv
      install: "{{ install_server_config.pip_virtualenv | default('no') | bool }}"
    - name: autopep8
      install: "{{ install_server_config.pip_autopep8 | default('no') | bool }}"
    - name: black
      install: "{{ install_server_config.pip_black | default('no') | bool }}"
    - name: pre-commit
      install: "{{ install_server_config.pip_pre_commit | default('no') | bool }}"
    - name: openconnect-sso
      install: "{{ install_server_config.pip_openconnect_sso | default('no') | bool }}"
    - name: ansible
      install: "{{ install_server_config.pip_ansible | default('no') | bool }}"
    - name: ansible-lint
      install: "{{ install_server_config.pip_ansible | default('no') | bool }}"

# ------------------------------------------------------------------------------
# RUBY
# install_server_config.ruby
install_server_ruby:
  apt_dependencies:
    - ruby-full
    - build-essential
    - zlib1g-dev
  set_path: true

# ------------------------------------------------------------------------------
# GO packages
# install_server_config.go_...
install_server_go_sources:
  - source: github.com/kubernetes/kompose
    install: "{{ install_server_config.go_kompose | default('no') | bool }}"

# ------------------------------------------------------------------------------
# NPM
# install_server_config.npm
install_server_npm:
  deb:
    url: "{{ install_server_links_to_check_update.npm_url }}"
    file: "{{ install_server_links_to_check_update.npm_file }}"
  apt: nodejs
  set_path: true
install_server_npm_pkg:
  - typescript
# - "@angular/cli"
# - typescript
# - jshint
# - ts-node
# - tslint
# - nodemon
# - pm2

# ------------------------------------------------------------------------------
# MONGODB
# install_server_config.mongodb
install_server_mongodb:
  packages:
    - mongodb-org
  service: mongod
  enabled: true
  repo_name: mongodb
  repo: https://repo.mongodb.org/apt/ubuntu
  version: multiverse
  fingerprint: null
  pgp: "{{ install_server_links_to_check_update.mongodb_pgp }}"
  distribution: "{{ install_server_links_to_check_update.mongodb_distribution }}"

# ------------------------------------------------------------------------------
# JAVA
# install_server_config.java
install_server_java_version: 11
install_server_java:
  apt:
    - name: "openjdk-{{ install_server_java_version }}-jre-headless"
      install: "{{ install_server_config.java | default('no') | bool }}"
    - name: ant
      install: "{{ install_server_config.java_ant | default('no') | bool }}"
  os_env:
    - variable: JAVA_HOME
      path: "/usr/lib/jvm/java-{{ install_server_java_version }}-openjdk-amd64"
